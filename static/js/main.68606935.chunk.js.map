{"version":3,"sources":["helpers/Constants/constants.ts","Components/SideBar.tsx","Components/HomePage.tsx","../../src/Components/Timer.tsx","helpers/Constants/ComponentPropsList.ts","Components/CodeBlock.tsx","Components/ComponentPropsDisplay.tsx","Components/TimerWrapper.tsx","Components/NavBar.tsx","Components/Title.tsx","App.tsx","index.tsx"],"names":["AVAILABLE_COMPONENTS","url","name","title","SideBar","className","to","map","componentRoute","index","key","HomePage","Timer","props","useState","seconds","remaingSec","setRemainSeconds","listener","setListener","useEffect","onTimeEnd","setTimeout","leftSeconds","listenerList","forEach","listner","callback","React","style","styles","timerstyles","commonStyles","classList","_props$classList","join","minutes","Math","floor","hours","getTimerFormat","TimerComponentPropsList","syntax","explanation","optional","CodeBlock","code","onClick","navigator","clipboard","writeText","ComponentPropsList","list","componentProp","TimerWrapper","NavBar","setSearchText","type","placeholder","onChange","e","target","value","Title","setTitle","showNavbar","setShowNabar","path","useLocation","console","log","pathname","pathName","route","filter","component","length","getTitle","App","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68606935.chunk.js","sourcesContent":["import { ComponentRouter } from \"../../Models/ConstantModels\";\n\nexport const AVAILABLE_COMPONENTS: Array<ComponentRouter> = [\n    {\n        url: \"/ui-components/timer\",\n        name: \"Timer\",\n        title: \"Timer Component\"\n    }\n]\nexport const getTitle = (pathName: string) => {\n    const route: Array<ComponentRouter> = AVAILABLE_COMPONENTS.filter(component => component.url === pathName);\n    if(route.length > 0) {\n        return route[0].title;\n    }\n    return 'Ui-Components';\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AVAILABLE_COMPONENTS } from '../helpers/Constants/constants'\nimport { ComponentRouter } from '../Models/ConstantModels'\n\nexport const SideBar = () => {\n  return (\n    <aside className='text-white' >\n      <Link to={'/'} className=\"flex justify-center mb-4 mt-3 outline-none\">\n        <h1 className='p-2 text-yellow-500 text-3xl'>Ui-Components</h1>\n      </Link>\n      <div className='font-bold flex justify-center text-xl'>\n        Components\n      </div>\n      <ul className='grid grid-flow-col gap-1 mt-4'>\n        {AVAILABLE_COMPONENTS.map(\n          (componentRoute: ComponentRouter, index: number) => (\n            <li key={index} className=' cursor-pointer'>\n              <Link className='block hover:bg-slate-700 p-0.5 pl-2 rounded-md text-lg outline-none' to={componentRoute.url}>\n                {componentRoute.name}\n              </Link>\n            </li>\n          )\n        )}\n      </ul>\n    </aside>\n  )\n}\n","import React from \"react\";\n\nexport const HomePage = () => {\n    return (\n        <section className=\"w-full h-full flex items-center justify-center bg-slate-400\">\n            <div className=\"text-white\">\n                <h1 className=\"text-5xl text-ellipsis\">Welcome to <span className=\"text-yellow-500\">Ui-Components</span></h1>\n                <p className=\"mx-3 mt-2\">explore the components!!!</p>\n            </div>\n        </section>\n    );\n}","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react'\nimport { CommonProps } from '../Common/CommonProps'\nimport timerstyles from '../styles/Timer.module.scss'\nimport commonStyles from '../styles.module.scss'\n\ninterface Listener {\n  seconds: number\n  callback: (...args: any) => void\n}\n\ninterface TimerProps extends CommonProps {\n  seconds: number\n  onTimeEnd?: () => void\n  listenerList?: Array<Listener>\n  key?: any\n  classList?: Array<string>\n}\n\nexport const Timer = (props: TimerProps) => {\n  const [remaingSec, setRemainSeconds] = useState(props.seconds)\n  const [listener, setListener] = useState({})\n\n  const getTimerFormat = (seconds: number) => {\n    const remaingSec = seconds % 60\n    const minutes = Math.floor(seconds / 60)\n    const hours = Math.floor(minutes / 60)\n    return `${hours < 10 ? '0' + hours : hours} : ${\n      minutes < 10 ? '0' + minutes : minutes\n    } : ${remaingSec < 10 ? '0' + remaingSec : remaingSec}`\n  }\n\n  useEffect(() => {\n    setRemainSeconds(props.seconds)\n  }, [props.seconds])\n\n  useEffect(() => {\n    if (remaingSec <= 0) {\n      props.onTimeEnd && props.onTimeEnd()\n      return\n    }\n    if (listener[remaingSec]) listener[remaingSec]()\n    setTimeout(() => setRemainSeconds((leftSeconds) => leftSeconds - 1), 1000)\n  }, [remaingSec])\n\n  useEffect(() => {\n    const listener = {}\n    props.listenerList &&\n      props.listenerList.forEach((listner: Listener) => {\n        listener[listner.seconds] = listner.callback\n      })\n    setListener(listener)\n  }, [props.listenerList])\n\n  return (\n    <div\n      style={props.styles}\n      className={`${timerstyles.timerWrapper} ${\n        commonStyles.center\n      } ${props.classList?.join(' ')}`}\n      key={props.key}\n    >\n      <span className={timerstyles.displayBlock}>\n        {getTimerFormat(remaingSec)}\n      </span>\n    </div>\n  )\n}\n","import { ComponentPropsItem } from \"../../Models/ConstantModels\";\n\n\nexport const TimerComponentPropsList: Array<ComponentPropsItem> = [\n    {\n        name: 'seconds',\n        syntax: '<Timer seconds={100} />',\n        explanation: \"seconds does take only number, that will converted into hours, minutes and seconds to display\",\n        optional: false\n    },\n    {\n        name: 'onTimeEnd',\n        syntax: '<Timer seconds={100} onTimeEnd={() => console.log(\"done\")} />',\n        explanation: \"onTimeEnd is a callback function that will be called when timer has reached 0\",\n        optional: true\n    },\n    {\n        name: 'listenerList',\n        syntax: `<Timer \n    seconds={100} \n    listenerList={[\n        {seconds: 10, callback: () => console.log(\"10 seconds\")}, \n        {seconds: 20, callback: () => console.log(\"20 seconds\")}\n    ]} \n/>`,\n        explanation: \"listenerList is an array of objects with seconds and callback, callback method will be called when timer has reached the specified seconds passed in object\",\n        optional: true\n    },\n    {\n        name: 'key',\n        syntax: '<Timer seconds={100} key={\"unique-value\"} />',\n        explanation: \"key is a unique value that will be used to identify the timer\",\n        optional: true\n    },\n    {\n        name: 'classList',\n        syntax: '<Timer seconds={100} classList={[\"class1\", \"class2\"]} />',\n        explanation: \"classList is an array of strings that will be added to the calllist of the timer\",\n        optional: true\n    }\n];\n","import React from 'react'\nimport { CodeBlockProps } from '../Models/PropModels'\n\nexport const CodeBlock = (props: CodeBlockProps) => {\n  const copyText = () => {\n    navigator.clipboard.writeText(props.code)\n  }\n\n  return (\n    <div className='flex bg-cyan-600 w-fit rounded-md mt-2 mb-2 relative copyBlock'>\n      <code className='p-4 m-4 ml-1 mr-1'>\n        <pre>{props.code}</pre>\n      </code>\n      <span\n        className='absolute bg-cyan-700 bottom-0 right-0 hidden p-1 text-white border-solid border-cyan-600 border-2 rounded-md copyButton cursor-pointer'\n        onClick={copyText}\n      >\n        copy\n      </span>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { ComponentPropsItem } from \"../Models/ConstantModels\";\nimport { ComponentPropsListProps } from \"../Models/PropModels\";\nimport { CodeBlock } from \"./CodeBlock\";\n\nexport const ComponentPropsList = (props: ComponentPropsListProps) => {\n\n    return (\n        <ul className='flex flex-col font-light'>\n        {props.list?.map((componentProp: ComponentPropsItem, index) => (\n          <li key={index} className=\"p-0 pb-2\">\n            <div className='flex flex-col bg-slate-800 text-white p-2 rounded-md'>\n              <span>Property: {componentProp.name}</span>\n              <CodeBlock title=\"sytax\" code={componentProp.syntax} />\n              <span>{componentProp.explanation}</span>\n              <span>Optional: {componentProp.optional ? 'true':'false'}</span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    )\n\n}","import React from 'react'\nimport { Timer } from 'ui-components'\nimport { TimerComponentPropsList } from '../helpers/Constants/ComponentPropsList'\nimport { CodeBlock } from './CodeBlock'\nimport { ComponentPropsList } from './ComponentPropsDisplay'\n\nexport const TimerWrapper = () => {\n  return (\n    <section className='flex p-2 flex-col'>\n      <p>\n        Timer component is used to set down the timer for any longer time. It\n        accepts the seconds.\n      </p>\n      <br />\n      <div className='flex flex-col'>\n        <div className='flex flex-col'>\n          <div>Example code</div>\n          <CodeBlock title='Example Code' code='<Timer seconds={130} />' />\n        </div>\n        Output of the above code\n        <Timer seconds={130} />\n      </div>\n      <div className='mt-4 font-bold'>\n        Timer Component accepts the following props:\n       <ComponentPropsList list={TimerComponentPropsList} />\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport const NavBar = () => {\n\n  const [, setSearchText] = React.useState('');\n\n  return (\n    <div className='p-4 bg-slate-900 text-white text-2xl flex justify-end'>\n      <input className='bg-transparent outline-none border-b p-0.5' type={\"search\"} placeholder={\"Search\"} onChange={(e) => setSearchText(e.target.value)} />\n    </div>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\";\nimport { getTitle } from \"../helpers/Constants/constants\";\n\nexport const Title = () => {\n\n    const [title, setTitle] = React.useState(\"\");\n    const [showNavbar, setShowNabar] = React.useState(false);\n    const path = useLocation();\n\n    useEffect(() => {\n        console.log(path.pathname, path.pathname === \"/\")\n        if(path.pathname === \"/ui-components\") setShowNabar(false);\n        else if(!showNavbar)setShowNabar(true);\n        setTitle(getTitle(path.pathname));\n    }, [path]);\n\n    return (\n        <div className={`text-4xl pb-0 ${showNavbar ? '' : 'hidden'}`}>\n            <h1 className=\"\">{title}</h1>\n        </div>\n    )\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\n\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\nimport { SideBar } from './Components/SideBar'\nimport { HomePage } from './Components/HomePage'\nimport { TimerWrapper } from './Components/TimerWrapper'\n\nimport 'ui-components/dist/index.css'\nimport './styles/main.css'\nimport './styles/App.css'\nimport { NavBar } from './Components/NavBar'\nimport { Title } from './Components/Title'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <main className='flex '>\n        <div className='sidebarWrapper bg-slate-900'>\n          <SideBar />\n        </div>\n        <div className='mainBlock flex flex-col'>\n          <NavBar />\n          <div className='p-5 bg-slate-400 h-full'>\n            <Title />\n            <Routes>\n              <Route path='/ui-components' element={<HomePage />} />\n              <Route path='/ui-components/timer' element={<TimerWrapper />} />\n              <Route path='*' element={<Navigate to={'/ui-components'} />} />\n            </Routes>\n          </div>\n        </div>\n      </main>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { RecoilRoot } from 'recoil'\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}
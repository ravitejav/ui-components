{"version":3,"file":"index.modern.js","sources":["../src/Components/Timer.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react'\nimport { CommonProps } from '../Common/CommonProps'\nimport timerstyles from '../styles/Timer.module.scss'\nimport commonStyles from '../styles.module.scss'\n\ninterface Listener {\n  seconds: number\n  callback: (...args: any) => void\n}\n\ninterface TimerProps extends CommonProps {\n  seconds: number\n  onTimeEnd?: () => void\n  listenerList?: Array<Listener>\n  key?: any\n  classList?: Array<string>\n}\n\nexport const Timer = (props: TimerProps) => {\n  const [remaingSec, setRemainSeconds] = useState(props.seconds)\n  const [listener, setListener] = useState({})\n\n  const getTimerFormat = (seconds: number) => {\n    const remaingSec = seconds % 60\n    const minutes = Math.floor(seconds / 60)\n    const hours = Math.floor(minutes / 60)\n    return `${hours < 10 ? '0' + hours : hours} : ${\n      minutes < 10 ? '0' + minutes : minutes\n    } : ${remaingSec < 10 ? '0' + remaingSec : remaingSec}`\n  }\n\n  useEffect(() => {\n    setRemainSeconds(props.seconds)\n  }, [props.seconds])\n\n  useEffect(() => {\n    if (remaingSec <= 0) {\n      props.onTimeEnd && props.onTimeEnd()\n      return\n    }\n    if (listener[remaingSec]) listener[remaingSec]()\n    setTimeout(() => setRemainSeconds((leftSeconds) => leftSeconds - 1), 1000)\n  }, [remaingSec])\n\n  useEffect(() => {\n    const listener = {}\n    props.listenerList &&\n      props.listenerList.forEach((listner: Listener) => {\n        listener[listner.seconds] = listner.callback\n      })\n    setListener(listener)\n  }, [props.listenerList])\n\n  return (\n    <div\n      style={props.styles}\n      className={`${timerstyles.timerWrapper} ${\n        commonStyles.center\n      } ${props.classList?.join(' ')}`}\n      key={props.key}\n    >\n      <span className={timerstyles.displayBlock}>\n        {getTimerFormat(remaingSec)}\n      </span>\n    </div>\n  )\n}\n"],"names":["Timer","props","useState","seconds","remaingSec","setRemainSeconds","listener","setListener","getTimerFormat","minutes","Math","floor","hours","useEffect","onTimeEnd","setTimeout","leftSeconds","listenerList","forEach","listner","callback","React","style","styles","className","timerstyles","timerWrapper","commonStyles","center","classList","join","key","displayBlock"],"mappings":";;;;;;IAmBaA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;;;EACnB,gBAAuCC,QAAQ,CAACD,KAAK,CAACE,OAAP,CAA/C;MAAOC,UAAP;MAAmBC,gBAAnB;;EACA,iBAAgCH,QAAQ,CAAC,EAAD,CAAxC;MAAOI,QAAP;MAAiBC,WAAjB;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACL,OAAD;IACrB,IAAMC,UAAU,GAAGD,OAAO,GAAG,EAA7B;IACA,IAAMM,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,OAAO,GAAG,EAArB,CAAhB;IACA,IAAMS,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,EAArB,CAAd;IACA,QAAUG,KAAK,GAAG,EAAR,GAAa,MAAMA,KAAnB,GAA2BA,KAArC,aACEH,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OADjC,aAEML,UAAU,GAAG,EAAb,GAAkB,MAAMA,UAAxB,GAAqCA,UAF3C;GAJF;;EASAS,SAAS,CAAC;IACRR,gBAAgB,CAACJ,KAAK,CAACE,OAAP,CAAhB;GADO,EAEN,CAACF,KAAK,CAACE,OAAP,CAFM,CAAT;EAIAU,SAAS,CAAC;IACR,IAAIT,UAAU,IAAI,CAAlB,EAAqB;MACnBH,KAAK,CAACa,SAAN,IAAmBb,KAAK,CAACa,SAAN,EAAnB;MACA;;;IAEF,IAAIR,QAAQ,CAACF,UAAD,CAAZ,EAA0BE,QAAQ,CAACF,UAAD,CAAR;IAC1BW,UAAU,CAAC;MAAA,OAAMV,gBAAgB,CAAC,UAACW,WAAD;QAAA,OAAiBA,WAAW,GAAG,CAA/B;OAAD,CAAtB;KAAD,EAA2D,IAA3D,CAAV;GANO,EAON,CAACZ,UAAD,CAPM,CAAT;EASAS,SAAS,CAAC;IACR,IAAMP,QAAQ,GAAG,EAAjB;IACAL,KAAK,CAACgB,YAAN,IACEhB,KAAK,CAACgB,YAAN,CAAmBC,OAAnB,CAA2B,UAACC,OAAD;MACzBb,QAAQ,CAACa,OAAO,CAAChB,OAAT,CAAR,GAA4BgB,OAAO,CAACC,QAApC;KADF,CADF;IAIAb,WAAW,CAACD,QAAD,CAAX;GANO,EAON,CAACL,KAAK,CAACgB,YAAP,CAPM,CAAT;EASA,OACEI,mBAAA,MAAA;IACEC,KAAK,EAAErB,KAAK,CAACsB;IACbC,SAAS,EAAKC,WAAW,CAACC,YAAjB,SACPC,YAAY,CAACC,MADN,8BAEL3B,KAAK,CAAC4B,SAFD,qDAEL,iBAAiBC,IAAjB,CAAsB,GAAtB,CAFK;IAGTC,GAAG,EAAE9B,KAAK,CAAC8B;GALb,EAOEV,mBAAA,OAAA;IAAMG,SAAS,EAAEC,WAAW,CAACO;GAA7B,EACGxB,cAAc,CAACJ,UAAD,CADjB,CAPF,CADF;AAaD,CAhDM;;;;"}